kind: pipeline
name: dev

trigger:
  branch:
    - dev

clone:
  disable: true

volumes:
  - name: docker-sock
    host:
      path: /var/run/docker.sock

steps:
  - name: s3-cache
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
        - ./node_modules
      endpoint: https://cache.wodcloud.com
      access_key:
        from_secret: ACCESS_KEY_MINIO
      secret_key:
        from_secret: SECRET_KEY_MINIO

  - name: fetch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

  - name: build
    image: registry.cn-qingdao.aliyuncs.com/wod/node:v16
    commands:
      - export NODE_ENV=production
      - yarn build

  - name: docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
    settings:
      base: registry.cn-qingdao.aliyuncs.com/wod/ui-base:v6.0-amd64
      dockerfile: .beagle/dockerfile
      repo: wod/awecloud-access-ui
      version: "v6.2.0"
      channel: amd64
      args: "TARGETOS=linux,TARGETARCH=amd64"
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
    settings:
      base: registry.cn-qingdao.aliyuncs.com/wod/ui-base:v6.0-arm64
      dockerfile: .beagle/dockerfile
      repo: wod/awecloud-access-ui
      version: "v6.2.0"
      channel: arm64
      args: "TARGETOS=linux,TARGETARCH=arm64"
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-ppc64le
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
    settings:
      base: registry.cn-qingdao.aliyuncs.com/wod/ui-base:v6.0-ppc64le
      dockerfile: .beagle/dockerfile
      repo: wod/awecloud-access-ui
      version: "v6.2.0"
      channel: ppc64le
      args: "TARGETOS=linux,TARGETARCH=ppc64le"
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-mips64le
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
    settings:
      base: registry.cn-qingdao.aliyuncs.com/wod/ui-base:v6.0-mips64le
      dockerfile: .beagle/dockerfile
      repo: wod/awecloud-access-ui
      version: "v6.2.0"
      channel: mips64le
      args: "TARGETOS=linux,TARGETARCH=mips64le"
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-arch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/mips64le
      template: registry.cn-qingdao.aliyuncs.com/wod/awecloud-access-ui:v6.2.0-ARCH
      target: registry.cn-qingdao.aliyuncs.com/wod/awecloud-access-ui:v6.2.0
      insecure: true
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

---
clone:
  disable: true

trigger:
  branch:
    - main

volumes:
  - name: docker-sock
    host:
      path: /var/run/docker.sock

kind: pipeline
name: main
steps:
  - name: harbor-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    pull: always
    environment:
      REGISTRY_USER:
        from_secret: REGISTRY_USER_ALIYUN
      REGISTRY_PASSWORD:
        from_secret: REGISTRY_PASSWORD_ALIYUN
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod/awecloud-access-ui:v6.2.0-amd64
      target: registry.cn-qingdao.aliyuncs.com/wod/awecloud-access-ui:v6-amd64

  - name: harbor-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    pull: always
    environment:
      REGISTRY_USER:
        from_secret: REGISTRY_USER_ALIYUN
      REGISTRY_PASSWORD:
        from_secret: REGISTRY_PASSWORD_ALIYUN
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod/awecloud-access-ui:v6.2.0-arm64
      target: registry.cn-qingdao.aliyuncs.com/wod/awecloud-access-ui:v6-arm64

  - name: harbor-ppc64le
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    pull: always
    environment:
      REGISTRY_USER:
        from_secret: REGISTRY_USER_ALIYUN
      REGISTRY_PASSWORD:
        from_secret: REGISTRY_PASSWORD_ALIYUN
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod/awecloud-access-ui:v6.2.0-ppc64le
      target: registry.cn-qingdao.aliyuncs.com/wod/awecloud-access-ui:v6-ppc64le

  - name: harbor-mips64le
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-tag:1.0
    pull: always
    environment:
      REGISTRY_USER:
        from_secret: REGISTRY_USER_ALIYUN
      REGISTRY_PASSWORD:
        from_secret: REGISTRY_PASSWORD_ALIYUN
    settings:
      source: registry.cn-qingdao.aliyuncs.com/wod/awecloud-access-ui:v6.2.0-mips64le
      target: registry.cn-qingdao.aliyuncs.com/wod/awecloud-access-ui:v6-mips64le

  - name: harbor-arch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/mips64le
      template: registry.cn-qingdao.aliyuncs.com/wod/awecloud-access-ui:v6-ARCH
      target: registry.cn-qingdao.aliyuncs.com/wod/awecloud-access-ui:v6
      insecure: true
      username:
        from_secret: REGISTRY_USER
      password:
        from_secret: REGISTRY_PASSWORD

---
kind: secret
name: SOCKS5_PROXY
get:
  name: SOCKS5_PROXY
  path: devops-secrets

---
kind: secret
name: ACCESS_KEY_MINIO
get:
  name: ACCESS_KEY_MINIO
  path: devops-secrets

---
kind: secret
name: SECRET_KEY_MINIO
get:
  name: SECRET_KEY_MINIO
  path: devops-secrets

---
kind: secret
name: REGISTRY_USER_ALIYUN
get:
  name: REGISTRY_USER_ALIYUN
  path: devops-secrets

---
kind: secret
name: REGISTRY_PASSWORD_ALIYUN
get:
  name: REGISTRY_PASSWORD_ALIYUN
  path: devops-secrets
